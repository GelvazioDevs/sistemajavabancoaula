package aula;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Senac
 */
public class consultaProdutosProfessor extends javax.swing.JFrame {

    public static final int BUSCAR_TODOS = 0;
    public int codigo;
    public String descricao;
    
    /**
     * Creates new form consultaProdutos
     */
    public consultaProdutosProfessor() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        comboboxFiltro = new javax.swing.JComboBox<>();
        edtPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaConsultaProdutos = new javax.swing.JTable();
        botaoFiltrarTodos = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        comboboxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Descrição" }));

        tabelaConsultaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Preço Custo", "Preço Venda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaConsultaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaConsultaProdutosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaConsultaProdutos);

        botaoFiltrarTodos.setText("Filtrar Todos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoFiltrarTodos)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboboxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(edtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botaoFiltrarTodos)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(comboboxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println("clicou em consultar!!");
        
        int selecionado = 0;
        if (botaoFiltrarTodos.isSelected()) {
            selecionado = 999;
            edtPesquisa.setText("");
        } else if (edtPesquisa.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Informe um valor para pesquisa!");
        } else {
            selecionado = comboboxFiltro.getSelectedIndex();            
        }
        
        System.out.println("selecionado:" + selecionado);

        try {
            ArrayList<Produto> listaProdutos = getAllProdutos(selecionado);
            int totalRegistros = listaProdutos.size();
            if (totalRegistros == 0) {
                JOptionPane.showMessageDialog(null, "Produto não encontrado para filtro selecionado!");
            }
            
            
            
            
            
            else {
                try {
                    atualizaTabelaProdutos(selecionado);
                } catch (IOException ex) {
                    Logger.getLogger(consultaProdutosProfessor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(consultaProdutosProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabelaConsultaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaConsultaProdutosMouseClicked
//        codigo = Integer.parseInt(String.valueOf(tabelaConsultaProdutos.getModel().getValueAt(tabelaConsultaProdutos.getSelectedRow(), 0)));
//        descricao = String.valueOf(tabelaConsultaProdutos.getModel().getValueAt(tabelaConsultaProdutos.getSelectedRow(), 1));
        dispose();
    }//GEN-LAST:event_tabelaConsultaProdutosMouseClicked

    // lista produtos
    public ArrayList<Produto> getAllProdutos(int selecionado) throws IOException {
        String sql = "select * from produto";

        // CODIGO SELECIONADO
        if (selecionado == 0) {
            codigo = Integer.parseInt(edtPesquisa.getText());
            sql = "select * from produto WHERE id = " + codigo + " order by id";
        } else if (selecionado == 1) {
            descricao = edtPesquisa.getText();
            sql = "select * from produto WHERE descricao ilike '%" + descricao + "%' order by id";
        }

        Produto produto = new Produto();
        ArrayList<Produto> listaProdutos = Conexao.executaQuery(sql, produto);
        for (Produto auxProduto : listaProdutos) {
            System.out.println("Codigo:" + auxProduto.getId());
            System.out.println("Descricao:" + auxProduto.getDescricao());
            System.out.println("Preco Custo:" + auxProduto.getPrecocusto());
            System.out.println("Preco Venda:" + auxProduto.getPrecovenda());
            System.out.println("-----------------------------");
        }
        
        return listaProdutos;
    }

    public void atualizaTabelaProdutos(int selecionado) throws IOException{
        DefaultTableModel model = (DefaultTableModel) tabelaConsultaProdutos.getModel();
        
        // Limpa a tabela
        model.setNumRows(0);
        model.setRowCount(0);

        ArrayList<Produto> listaProdutos = getAllProdutos(selecionado);
        System.out.println("-----------------------------");       
        for (Produto auxProduto : listaProdutos) {
            System.out.println("Codigo:" + auxProduto.getId());
            System.out.println("Descricao:" + auxProduto.getDescricao());
            System.out.println("Preco Custo:" + auxProduto.getPrecocusto());
            System.out.println("Preco Venda:" + auxProduto.getPrecovenda());
            System.out.println("-----------------------------");       
            
            
            // acima igual antes
            model.addRow(new Object[]{
                auxProduto.getId(),
                auxProduto.getDescricao(),
                auxProduto.getPrecocusto(),
                auxProduto.getPrecovenda()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(consultaProdutosProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(consultaProdutosProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(consultaProdutosProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(consultaProdutosProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new consultaProdutosProfessor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton botaoFiltrarTodos;
    private javax.swing.JComboBox<String> comboboxFiltro;
    private javax.swing.JTextField edtPesquisa;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaConsultaProdutos;
    // End of variables declaration//GEN-END:variables
}
